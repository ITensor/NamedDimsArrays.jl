var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"EditURL = \"../../examples/README.jl\"","category":"page"},{"location":"#NamedDimsArrays.jl","page":"Home","title":"NamedDimsArrays.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: Stable) (Image: Dev) (Image: Build Status) (Image: Coverage) (Image: Code Style: Blue) (Image: Aqua)","category":"page"},{"location":"#Installation-instructions","page":"Home","title":"Installation instructions","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package resides in the ITensor/ITensorRegistry local registry. In order to install, simply add that registry through your package manager. This step is only required once.","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> using Pkg: Pkg\n\njulia> Pkg.Registry.add(url=\"https://github.com/ITensor/ITensorRegistry\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"or:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> Pkg.Registry.add(url=\"git@github.com:ITensor/ITensorRegistry.git\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"if you want to use SSH credentials, which can make it so you don't have to enter your Github ursername and password when registering packages.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Then, the package can be added as usual through the package manager:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> Pkg.add(\"NamedDimsArrays\")","category":"page"},{"location":"#Examples","page":"Home","title":"Examples","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using NamedDimsArrays: aligndims, dename, dimnames, named\nusing TensorAlgebra: contract\n\n# Named dimensions\ni = named(2, \"i\")\nj = named(2, \"j\")\nk = named(2, \"k\")\n\n# Arrays with named dimensions\nna1 = randn(i, j)\nna2 = randn(j, k)\n\n@show dimnames(na1) == (\"i\", \"j\")\n\n# Indexing\n@show na1[j => 2, i => 1] == na1[1, 2]\n\n# Tensor contraction\nna_dest = contract(na1, na2)\n\n@show issetequal(dimnames(na_dest), (\"i\", \"k\"))\n# `dename` removes the names and returns an `Array`\n@show dename(na_dest, (i, k)) â‰ˆ dename(na1) * dename(na2)\n\n# Permute dimensions (like `ITensors.permute`)\nna1 = aligndims(na1, (j, i))\n@show na1[i => 1, j => 2] == na1[2, 1]","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"This page was generated using Literate.jl.","category":"page"}]
}
